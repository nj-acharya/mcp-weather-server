import json
import time
import jwt  # PyJWT
from cryptography.hazmat.primitives import serialization

# ----------------------------
# CONFIG
# ----------------------------
SERVICE_ACCOUNT_FILE = "vertexai-250626-3b96a46922d7.json"
TARGET_AUDIENCE = "https://alerts-api.example.com"
REQUIRED_ROLE = "alerts:read"

# ----------------------------
# Load service account key
# ----------------------------
with open(SERVICE_ACCOUNT_FILE, "r") as f:
    sa = json.load(f)

private_key = sa["private_key"]
client_email = sa["client_email"]

# ----------------------------
# Build JWT payload
# ----------------------------
now = int(time.time())
payload = {
    "iss": client_email,        # issuer = service account email
    "sub": client_email,        # subject = service account email
    "aud": TARGET_AUDIENCE,     # audience = your C# backend
    "iat": now,
    "exp": now + 3600,          # 1 hour expiration
    "roles": [REQUIRED_ROLE]    # custom claim
}

# ----------------------------
# Sign JWT (no kid in header)
# ----------------------------
token = jwt.encode(
    payload,
    private_key,
    algorithm="RS256"
)

print("✅ Self-signed JWT with custom claims:\n")
print(token)

# Optional: decode without verification
decoded = jwt.decode(token, options={"verify_signature": False})
print("\n✅ Decoded claims:")
for k, v in decoded.items():
    print(f"{k}: {v}")
